


CREATE TABLE aapl(Date DATE, Open DOUBLE, High DOUBLE, Low DOUBLE, "Close" DOUBLE, "Adj Close" DOUBLE, Volume BIGINT);
CREATE TABLE airports("name" VARCHAR, longitude DOUBLE, latitude DOUBLE);
CREATE TABLE alphabet(letter VARCHAR, frequency DOUBLE);
CREATE TABLE amzn(Date DATE, Open DOUBLE, High DOUBLE, Low DOUBLE, "Close" DOUBLE, "Adj Close" DOUBLE, Volume BIGINT);
CREATE TABLE annarbor(CY7001 DOUBLE, TRACTA VARCHAR, geometry BLOB);
CREATE TABLE anscombe(series BIGINT, x BIGINT, y DOUBLE);
CREATE TABLE barley(yield DOUBLE, variety VARCHAR, "year" BIGINT, site VARCHAR);
CREATE TABLE beagle(column0 DOUBLE, column1 DOUBLE);
CREATE TABLE bikes("location" VARCHAR, "time" DOUBLE, count BIGINT);
CREATE TABLE bls_metro_unemployment(division VARCHAR, date DATE, unemployment DOUBLE);
CREATE TABLE brands_2018("name" VARCHAR, "value" BIGINT);
CREATE TABLE ca55_south(SURVEY_AREA VARCHAR, "LINE_NUMB-SEG" VARCHAR, ORDER_BY BIGINT, MAP_SHEET BIGINT, LONGITUDE DOUBLE, LATITUDE DOUBLE, GRID_EAST BIGINT, GRID_NORTH BIGINT, GROUND_ELEV BIGINT, MTC BIGINT, AOD BIGINT, MAG_BUL BIGINT, MAG_IGRF55 BIGINT, MAG_IGRF90 BIGINT, L1 BIGINT, L2 BIGINT, L3 BIGINT);
CREATE TABLE caltrain(train BIGINT, speed VARCHAR, schedule VARCHAR, direction VARCHAR, station VARCHAR, distance BIGINT, "zone" BIGINT, "time" VARCHAR);
CREATE TABLE caltrain_schedule(station VARCHAR, "time" VARCHAR, line VARCHAR, "type" VARCHAR, orientation VARCHAR, "hours" BIGINT, "minutes" VARCHAR);
CREATE TABLE cancer("name" VARCHAR, "year" VARCHAR, survival BIGINT);
CREATE TABLE cars("name" VARCHAR, "economy (mpg)" DOUBLE, cylinders BIGINT, "displacement (cc)" DOUBLE, "power (hp)" BIGINT, "weight (lb)" BIGINT, "0-60 mph (s)" DOUBLE, "year" BIGINT);
CREATE TABLE cars_selection("name" VARCHAR, Displacement BIGINT, Mileage BIGINT, Price BIGINT, "Trunk space" BIGINT, Weight BIGINT);
CREATE TABLE car_production(date DATE, "value" BIGINT);
CREATE TABLE "catalog"(absolute_magnitude DOUBLE, color DOUBLE);
CREATE TABLE category_brands(date DATE, "name" VARCHAR, category VARCHAR, "value" BIGINT);
CREATE TABLE cdc_diabetes_obesity(county VARCHAR, diabetes VARCHAR, obesity VARCHAR);
CREATE TABLE cdc_diabetes_obesity_2020(county VARCHAR, diabetes VARCHAR, obesity VARCHAR);
CREATE TABLE census_regions(State VARCHAR, "State Code" VARCHAR, Region VARCHAR, Division VARCHAR);
CREATE TABLE ceramics(batch BIGINT, "value" DOUBLE);
CREATE TABLE chicago_homicide_dates(date TIMESTAMP);
CREATE TABLE civilizations(civilization VARCHAR, "start" BIGINT, "end" BIGINT, startLabel VARCHAR, endLabel VARCHAR, region VARCHAR, timeline VARCHAR);
CREATE TABLE covid_disparities(age VARCHAR, race VARCHAR, cases_total BIGINT, cases_percent DOUBLE, deaths_total BIGINT, deaths_percent DOUBLE, population_percent DOUBLE);
CREATE TABLE crimean_war(date DATE, army BIGINT, disease BIGINT, wounds BIGINT, other BIGINT);
CREATE TABLE debt(source VARCHAR, target VARCHAR, "value" DOUBLE);
CREATE TABLE detroit("type" VARCHAR, "transform" STRUCT(scale DOUBLE[], translate DOUBLE[]), objects STRUCT(detroit STRUCT("type" VARCHAR, geometries STRUCT("type" VARCHAR, id BIGINT, arcs JSON[][])[])), arcs BIGINT[][][]);
CREATE TABLE diamonds(carat DOUBLE, price BIGINT);
CREATE TABLE dim_SRDESC(series_id VARCHAR, "name" VARCHAR, unit VARCHAR, frequency VARCHAR, url VARCHAR);
CREATE TABLE driving(side VARCHAR, "year" BIGINT, miles DOUBLE, gas DOUBLE);
CREATE TABLE energy(source VARCHAR, target VARCHAR, "value" DOUBLE);
CREATE TABLE eu(State VARCHAR, Joined BIGINT, "Population 2006" BIGINT, "Population 2017" BIGINT, "Sep 1952" BIGINT, "Mar 1957" BIGINT, "Jan 1973" BIGINT, "Jun 1979" BIGINT, "Jan 1981" BIGINT, "Jan 1986" BIGINT, "Jun 1994" BIGINT, "Jan 1995" BIGINT, "May 2004" BIGINT, "Jun 2004" BIGINT, "Jan 2007" BIGINT, "Jun 2009" BIGINT, "Dec 2011" BIGINT, "Jul 2013" BIGINT, "Jun 2014" BIGINT, "Feb 2020" BIGINT);
CREATE TABLE fact_FRED(date DATE, "value" DOUBLE, series_id VARCHAR);
CREATE TABLE fcm(date VARCHAR, temperature DOUBLE, condition VARCHAR);
CREATE TABLE finra(column0 VARCHAR);
CREATE TABLE flare("name" VARCHAR, children STRUCT("name" VARCHAR, children STRUCT("name" VARCHAR, children STRUCT("name" VARCHAR, "value" BIGINT, children STRUCT("name" VARCHAR, "value" BIGINT)[])[], "value" BIGINT)[])[]);
CREATE TABLE flare_imports("name" VARCHAR, size BIGINT, imports VARCHAR[]);
CREATE TABLE flights(date DATE, "value" BIGINT);
CREATE TABLE flights_10m(ARR_DELAY SMALLINT, DISTANCE SMALLINT, DEP_TIME FLOAT);
CREATE TABLE flights_200k(date VARCHAR, delay BIGINT, distance BIGINT, origin VARCHAR, destination VARCHAR);
CREATE TABLE fruit(date DATE, Apples BIGINT, Bananas BIGINT);
CREATE TABLE gaia_sample(source_id BIGINT, ra FLOAT, "dec" FLOAT, parallax FLOAT, parallax_error FLOAT, phot_g_mean_mag FLOAT, bp_rp FLOAT, dr2_radial_velocity FLOAT, dr2_radial_velocity_error FLOAT);
CREATE TABLE gdp_receipts("year" BIGINT, country VARCHAR, receipts DOUBLE);
CREATE TABLE giss_temp("Year" BIGINT, Jan DOUBLE, Feb DOUBLE, Mar DOUBLE, Apr DOUBLE, May DOUBLE, Jun DOUBLE, Jul DOUBLE, Aug DOUBLE, Sep DOUBLE, Oct DOUBLE, Nov DOUBLE, "Dec" DOUBLE, "J-D" DOUBLE, "D-N" VARCHAR, DJF VARCHAR, MAM DOUBLE, JJA DOUBLE, SON DOUBLE);
CREATE TABLE gistemp(Date DATE, Anomaly DOUBLE);
CREATE TABLE goog(Date DATE, Open DOUBLE, High DOUBLE, Low DOUBLE, "Close" DOUBLE, "Adj Close" DOUBLE, Volume BIGINT);
CREATE TABLE graph(nodes STRUCT(id VARCHAR, "group" VARCHAR, radius BIGINT, citing_patents_count BIGINT)[], links STRUCT(source VARCHAR, target VARCHAR, "value" BIGINT)[]);
CREATE TABLE hale(country VARCHAR, hale VARCHAR);
CREATE TABLE ibm(Date DATE, Open DOUBLE, High DOUBLE, Low DOUBLE, "Close" DOUBLE, "Adj Close" DOUBLE, Volume BIGINT);
CREATE TABLE icelandic_population("value" BIGINT, "year" BIGINT, age BIGINT, sex VARCHAR);
CREATE TABLE industries(date DATE, industry VARCHAR, unemployed BIGINT);
CREATE TABLE ipos(rMVMP DOUBLE, "NAME" VARCHAR, rMVOP DOUBLE, Obs BIGINT, BHRET3 DOUBLE, date DATE);
CREATE TABLE iris(sepalLength DOUBLE, sepalWidth DOUBLE, petalLength DOUBLE, petalWidth DOUBLE, species VARCHAR);
CREATE TABLE jena_climate("Date Time" TIMESTAMP, "p (mbar)" DOUBLE, "T (degC)" DOUBLE, "Tpot (K)" DOUBLE, "Tdew (degC)" DOUBLE, "rh (%)" DOUBLE, "VPmax (mbar)" DOUBLE, "VPact (mbar)" DOUBLE, "VPdef (mbar)" DOUBLE, "sh (g/kg)" DOUBLE, "H2OC (mmol/mol)" DOUBLE, "rho (g/m**3)" DOUBLE, "wv (m/s)" DOUBLE, "max. wv (m/s)" DOUBLE, "wd (deg)" DOUBLE);
CREATE TABLE lebron_shots("index" BIGINT, grid_type VARCHAR, game_id VARCHAR, game_event_id BIGINT, player_id BIGINT, player_name VARCHAR, team_id BIGINT, team_name VARCHAR, period BIGINT, minutes_remaining BIGINT, seconds_remaining BIGINT, event_type VARCHAR, action_type VARCHAR, shot_type VARCHAR, shot_zone_basic VARCHAR, shot_zone_area VARCHAR, shot_zone_range VARCHAR, shot_distance BIGINT, loc_x BIGINT, loc_y BIGINT, shot_attempted_flag BIGINT, shot_made_flag BIGINT, game_date BIGINT, htm VARCHAR, vtm VARCHAR, season VARCHAR, made BOOLEAN);
CREATE TABLE london("type" VARCHAR, bbox DOUBLE[], "transform" STRUCT(scale DOUBLE[], translate DOUBLE[]), objects STRUCT(boroughs STRUCT("type" VARCHAR, geometries STRUCT("type" VARCHAR, arcs JSON[][], id VARCHAR, properties STRUCT(GSSCode VARCHAR))[])), arcs BIGINT[][][]);
CREATE TABLE london_car_access(borough VARCHAR, y2001 DOUBLE, y2011 DOUBLE, y2021 DOUBLE);
CREATE TABLE metros(Metro VARCHAR, POP_1980 BIGINT, LPOP_1980 DOUBLE, R90_10_1980 DOUBLE, POP_2015 BIGINT, LPOP_2015 DOUBLE, R90_10_2015 DOUBLE, nyt_display VARCHAR, state_display VARCHAR, highlight BIGINT);
CREATE TABLE miserables(nodes STRUCT(id VARCHAR, "group" BIGINT)[], links STRUCT(source VARCHAR, target VARCHAR, "value" BIGINT)[]);
CREATE TABLE mobility(city VARCHAR, country VARCHAR, population BIGINT, region VARCHAR, active DOUBLE, car DOUBLE);
CREATE TABLE msft(Date DATE, Open DOUBLE, High DOUBLE, Low DOUBLE, "Close" DOUBLE, "Adj Close" DOUBLE, Volume BIGINT);
CREATE TABLE mtcars("name" VARCHAR, mpg DOUBLE, cyl BIGINT, disp DOUBLE, hp BIGINT, drat DOUBLE, wt DOUBLE, qsec DOUBLE, vs BIGINT, am BIGINT, gear BIGINT, carb BIGINT);
CREATE TABLE mt_bruno(column00 DOUBLE, column01 DOUBLE, column02 DOUBLE, column03 DOUBLE, column04 DOUBLE, column05 DOUBLE, column06 DOUBLE, column07 DOUBLE, column08 DOUBLE, column09 DOUBLE, column10 DOUBLE, column11 DOUBLE, column12 DOUBLE, column13 DOUBLE, column14 DOUBLE, column15 DOUBLE, column16 DOUBLE, column17 DOUBLE, column18 DOUBLE, column19 DOUBLE, column20 DOUBLE, column21 DOUBLE, column22 DOUBLE, column23 DOUBLE, column24 BIGINT);
CREATE TABLE nations("name" VARCHAR, region VARCHAR, income DOUBLE[][], population BIGINT[][], lifeExpectancy DOUBLE[][]);
CREATE TABLE nz_tourists(date DATE, "value" BIGINT);
CREATE TABLE obesity_2008_2018(id VARCHAR, obesity2008 DOUBLE, obesity2018 DOUBLE);
CREATE TABLE olympians(id BIGINT, "name" VARCHAR, nationality VARCHAR, sex VARCHAR, date_of_birth DATE, height DOUBLE, weight BIGINT, sport VARCHAR, gold BIGINT, silver BIGINT, bronze BIGINT, info VARCHAR);
CREATE TABLE penguins(species VARCHAR, island VARCHAR, culmen_length_mm DOUBLE, culmen_depth_mm DOUBLE, flipper_length_mm DOUBLE, body_mass_g DOUBLE, sex VARCHAR);
CREATE TABLE pge_electric_data(DATE DATE, "START TIME" TIME, USAGE DOUBLE);
CREATE TABLE phones("name" VARCHAR, "Battery Life" DOUBLE, Brand DOUBLE, "Contract Cost" DOUBLE, "Design And Quality" DOUBLE, "Have Internet Connectivity" DOUBLE, "Large Screen" DOUBLE, "Price Of Device" DOUBLE, "To Be A Smartphone" DOUBLE);
CREATE TABLE politifact(speaker VARCHAR, ruling VARCHAR, count BIGINT);
CREATE TABLE population("json" VARCHAR[]);
CREATE TABLE population_by_age("name" VARCHAR, "value" BIGINT);
CREATE TABLE population_germany(age BIGINT, sex VARCHAR, category VARCHAR, population BIGINT);
CREATE TABLE population_state_age(state VARCHAR, "key" VARCHAR, population BIGINT);
CREATE TABLE population_state_age_complete(State VARCHAR, "Under 5 Years" BIGINT, "5 to 13 Years" BIGINT, "14 to 17 Years" BIGINT, "18 to 24 Years" BIGINT, "25 to 44 Years" BIGINT, "45 to 64 Years" BIGINT, "65 Years and Over" BIGINT);
CREATE TABLE povcalnet(isInterpolated BIGINT, useMicroData BIGINT, CountryCode VARCHAR, CountryName VARCHAR, RegionCode VARCHAR, CoverageType VARCHAR, RequestYear BIGINT, DataYear DOUBLE, DataType VARCHAR, PPP DOUBLE, PovertyLine BIGINT, Mean DOUBLE, HeadCount DOUBLE, PovGap DOUBLE, PovGapSqr DOUBLE, Watts DOUBLE, Gini DOUBLE, Median DOUBLE, "pr.mld" DOUBLE, Polarization DOUBLE, ReqYearPopulation DOUBLE, SvyInfoID VARCHAR, Decile1 DOUBLE, Decile2 DOUBLE, Decile3 DOUBLE, Decile4 DOUBLE, Decile5 DOUBLE, Decile6 DOUBLE, Decile7 DOUBLE, Decile8 DOUBLE, Decile9 DOUBLE, Decile10 DOUBLE);
CREATE TABLE pulsar(column000 DOUBLE, column001 DOUBLE, column002 DOUBLE, column003 DOUBLE, column004 DOUBLE, column005 DOUBLE, column006 DOUBLE, column007 DOUBLE, column008 DOUBLE, column009 DOUBLE, column010 DOUBLE, column011 DOUBLE, column012 DOUBLE, column013 DOUBLE, column014 DOUBLE, column015 DOUBLE, column016 DOUBLE, column017 DOUBLE, column018 DOUBLE, column019 DOUBLE, column020 DOUBLE, column021 DOUBLE, column022 DOUBLE, column023 DOUBLE, column024 DOUBLE, column025 DOUBLE, column026 DOUBLE, column027 DOUBLE, column028 DOUBLE, column029 DOUBLE, column030 DOUBLE, column031 DOUBLE, column032 DOUBLE, column033 DOUBLE, column034 DOUBLE, column035 DOUBLE, column036 DOUBLE, column037 DOUBLE, column038 DOUBLE, column039 DOUBLE, column040 DOUBLE, column041 DOUBLE, column042 DOUBLE, column043 DOUBLE, column044 DOUBLE, column045 DOUBLE, column046 DOUBLE, column047 DOUBLE, column048 DOUBLE, column049 DOUBLE, column050 DOUBLE, column051 DOUBLE, column052 DOUBLE, column053 DOUBLE, column054 DOUBLE, column055 DOUBLE, column056 DOUBLE, column057 DOUBLE, column058 DOUBLE, column059 DOUBLE, column060 DOUBLE, column061 DOUBLE, column062 DOUBLE, column063 DOUBLE, column064 DOUBLE, column065 DOUBLE, column066 DOUBLE, column067 DOUBLE, column068 DOUBLE, column069 DOUBLE, column070 DOUBLE, column071 DOUBLE, column072 DOUBLE, column073 DOUBLE, column074 DOUBLE, column075 DOUBLE, column076 DOUBLE, column077 DOUBLE, column078 DOUBLE, column079 DOUBLE, column080 DOUBLE, column081 DOUBLE, column082 DOUBLE, column083 DOUBLE, column084 DOUBLE, column085 DOUBLE, column086 DOUBLE, column087 DOUBLE, column088 DOUBLE, column089 DOUBLE, column090 DOUBLE, column091 DOUBLE, column092 DOUBLE, column093 DOUBLE, column094 DOUBLE, column095 DOUBLE, column096 DOUBLE, column097 DOUBLE, column098 DOUBLE, column099 DOUBLE, column100 DOUBLE, column101 DOUBLE, column102 DOUBLE, column103 DOUBLE, column104 DOUBLE, column105 DOUBLE, column106 DOUBLE, column107 DOUBLE, column108 DOUBLE, column109 DOUBLE, column110 DOUBLE, column111 DOUBLE, column112 DOUBLE, column113 DOUBLE, column114 DOUBLE, column115 DOUBLE, column116 DOUBLE, column117 DOUBLE, column118 DOUBLE, column119 DOUBLE, column120 DOUBLE, column121 DOUBLE, column122 DOUBLE, column123 DOUBLE, column124 DOUBLE, column125 DOUBLE, column126 DOUBLE, column127 DOUBLE, column128 DOUBLE, column129 DOUBLE, column130 DOUBLE, column131 DOUBLE, column132 DOUBLE, column133 DOUBLE, column134 DOUBLE, column135 DOUBLE, column136 DOUBLE, column137 DOUBLE, column138 DOUBLE, column139 DOUBLE, column140 DOUBLE, column141 DOUBLE, column142 DOUBLE, column143 DOUBLE, column144 DOUBLE, column145 DOUBLE, column146 DOUBLE, column147 DOUBLE, column148 DOUBLE, column149 DOUBLE, column150 DOUBLE, column151 DOUBLE, column152 DOUBLE, column153 DOUBLE, column154 DOUBLE, column155 DOUBLE, column156 DOUBLE, column157 DOUBLE, column158 DOUBLE, column159 DOUBLE, column160 DOUBLE, column161 DOUBLE, column162 DOUBLE, column163 DOUBLE, column164 DOUBLE, column165 DOUBLE, column166 DOUBLE, column167 DOUBLE, column168 DOUBLE, column169 DOUBLE, column170 DOUBLE, column171 DOUBLE, column172 DOUBLE, column173 DOUBLE, column174 DOUBLE, column175 DOUBLE, column176 DOUBLE, column177 DOUBLE, column178 DOUBLE, column179 DOUBLE, column180 DOUBLE, column181 DOUBLE, column182 DOUBLE, column183 DOUBLE, column184 DOUBLE, column185 DOUBLE, column186 DOUBLE, column187 DOUBLE, column188 DOUBLE, column189 DOUBLE, column190 DOUBLE, column191 DOUBLE, column192 DOUBLE, column193 DOUBLE, column194 DOUBLE, column195 DOUBLE, column196 DOUBLE, column197 DOUBLE, column198 DOUBLE, column199 DOUBLE, column200 DOUBLE, column201 DOUBLE, column202 DOUBLE, column203 DOUBLE, column204 DOUBLE, column205 DOUBLE, column206 DOUBLE, column207 DOUBLE, column208 DOUBLE, column209 DOUBLE, column210 DOUBLE, column211 DOUBLE, column212 DOUBLE, column213 DOUBLE, column214 DOUBLE, column215 DOUBLE, column216 DOUBLE, column217 DOUBLE, column218 DOUBLE, column219 DOUBLE, column220 DOUBLE, column221 DOUBLE, column222 DOUBLE, column223 DOUBLE, column224 DOUBLE, column225 DOUBLE, column226 DOUBLE, column227 DOUBLE, column228 DOUBLE, column229 DOUBLE, column230 DOUBLE, column231 DOUBLE, column232 DOUBLE, column233 DOUBLE, column234 DOUBLE, column235 DOUBLE, column236 DOUBLE, column237 DOUBLE, column238 DOUBLE, column239 DOUBLE, column240 DOUBLE, column241 DOUBLE, column242 DOUBLE, column243 DOUBLE, column244 DOUBLE, column245 DOUBLE, column246 DOUBLE, column247 DOUBLE, column248 DOUBLE, column249 DOUBLE, column250 DOUBLE, column251 DOUBLE, column252 DOUBLE, column253 DOUBLE, column254 DOUBLE, column255 DOUBLE, column256 DOUBLE, column257 DOUBLE, column258 DOUBLE, column259 DOUBLE, column260 DOUBLE, column261 DOUBLE, column262 DOUBLE, column263 DOUBLE, column264 DOUBLE, column265 DOUBLE, column266 DOUBLE, column267 DOUBLE, column268 DOUBLE, column269 DOUBLE, column270 DOUBLE, column271 DOUBLE, column272 DOUBLE, column273 DOUBLE, column274 DOUBLE, column275 DOUBLE, column276 DOUBLE, column277 DOUBLE, column278 DOUBLE, column279 DOUBLE, column280 DOUBLE, column281 DOUBLE, column282 DOUBLE, column283 DOUBLE, column284 DOUBLE, column285 DOUBLE, column286 DOUBLE, column287 DOUBLE, column288 DOUBLE, column289 DOUBLE, column290 DOUBLE, column291 DOUBLE, column292 DOUBLE, column293 DOUBLE, column294 DOUBLE, column295 DOUBLE, column296 DOUBLE, column297 DOUBLE, column298 DOUBLE, column299 DOUBLE);
CREATE TABLE riaa_us_revenue(format VARCHAR, "group" VARCHAR, "year" DATE, revenue DOUBLE);
CREATE TABLE sales(market VARCHAR, segment VARCHAR, "value" BIGINT);
CREATE TABLE seattle_weather(date DATE, precipitation DOUBLE, temp_max DOUBLE, temp_min DOUBLE, wind DOUBLE, weather VARCHAR);
CREATE TABLE sea_ice_extent(date DATE, extent DOUBLE);
CREATE TABLE sfhh(nodes STRUCT(id VARCHAR, "start" VARCHAR, "end" VARCHAR)[], links STRUCT(source VARCHAR, target VARCHAR, "start" VARCHAR, "end" VARCHAR)[]);
CREATE TABLE sfo_temperature(DATE DATE, TAVG BIGINT, TMAX BIGINT, TMIN BIGINT);
CREATE TABLE sf_temperatures(date DATE, high DOUBLE, low DOUBLE);
CREATE TABLE simpsons(id BIGINT, title VARCHAR, original_air_date DATE, production_code VARCHAR, season BIGINT, number_in_season BIGINT, number_in_series BIGINT, us_viewers_in_millions DOUBLE, "views" BIGINT, imdb_rating DOUBLE, imdb_votes BIGINT, image_url VARCHAR, video_url VARCHAR);
CREATE TABLE stars(ID BIGINT, greek_letter VARCHAR, constellation VARCHAR, RA_hour VARCHAR, RA_min VARCHAR, RA_sec VARCHAR, dec_deg VARCHAR, dec_min VARCHAR, dec_sec VARCHAR, magnitude DOUBLE);
CREATE TABLE suits(source VARCHAR, target VARCHAR, "type" VARCHAR);
CREATE TABLE survey(Question VARCHAR, ID BIGINT, Response VARCHAR);
CREATE TABLE tdf_stage_8_2017(distance DOUBLE, elevation BIGINT);
CREATE TABLE temperature(date DATE, temperature DOUBLE);
CREATE TABLE titanic(Survived VARCHAR, Sex VARCHAR, Age VARCHAR, "Class" VARCHAR, "value" BIGINT);
CREATE TABLE traffic("location" VARCHAR, date VARCHAR, vehicles BIGINT);
CREATE TABLE unemployment(date DATE, industry VARCHAR, unemployed BIGINT);
CREATE TABLE unemployment201907("name" VARCHAR, rate DOUBLE, rank BIGINT);
CREATE TABLE unemployment_by_county(id VARCHAR, state VARCHAR, county VARCHAR, rate DOUBLE);
CREATE TABLE us("type" VARCHAR, objects STRUCT(counties STRUCT("type" VARCHAR, bbox DOUBLE[], geometries STRUCT("type" VARCHAR, id BIGINT, arcs JSON[][])[]), states STRUCT("type" VARCHAR, geometries STRUCT("type" VARCHAR, arcs BIGINT[][][], id BIGINT)[]), land STRUCT("type" VARCHAR, arcs BIGINT[][][])), arcs BIGINT[][][], "transform" STRUCT(scale DOUBLE[], translate DOUBLE[]));
CREATE TABLE us_congress_2023(full_name VARCHAR, birthday DATE, gender VARCHAR, "type" VARCHAR, state VARCHAR, party VARCHAR);
CREATE TABLE us_counties_10m("type" VARCHAR, bbox DOUBLE[], "transform" STRUCT(scale DOUBLE[], translate DOUBLE[]), objects STRUCT(counties STRUCT("type" VARCHAR, geometries STRUCT("type" VARCHAR, arcs JSON[][], id VARCHAR, properties STRUCT("name" VARCHAR))[]), states STRUCT("type" VARCHAR, geometries STRUCT("type" VARCHAR, arcs BIGINT[][][], id VARCHAR, properties STRUCT("name" VARCHAR))[]), nation STRUCT("type" VARCHAR, geometries STRUCT("type" VARCHAR, arcs BIGINT[][][])[])), arcs BIGINT[][][]);
CREATE TABLE us_county_population(state VARCHAR, county VARCHAR, population BIGINT);
CREATE TABLE us_population_state_age("name" VARCHAR, "<10" BIGINT, "10-19" BIGINT, "20-29" BIGINT, "30-39" BIGINT, "40-49" BIGINT, "50-59" BIGINT, "60-69" BIGINT, "70-79" BIGINT, "≥80" BIGINT);
CREATE TABLE us_presidential_election_2020(fips VARCHAR, "name" VARCHAR, votes BIGINT, absentee_votes BIGINT, reporting BIGINT, precincts BIGINT, absentee_method VARCHAR, eevp BIGINT, tot_exp_vote BIGINT, eevp_value VARCHAR, eevp_display VARCHAR, eevp_source VARCHAR, turnout_stage BIGINT, absentee_count_progress VARCHAR, absentee_outstanding VARCHAR, absentee_max_ballots BIGINT, provisional_outstanding VARCHAR, provisional_count_progress VARCHAR, results_trumpd BIGINT, results_bidenj BIGINT, results_jorgensenj BIGINT, results_venturaj BIGINT, results_blankenshipd BIGINT, results_pierceb BIGINT, results_de_la_fuenter BIGINT, results_absentee_trumpd BIGINT, results_absentee_bidenj BIGINT, results_absentee_jorgensenj BIGINT, results_absentee_venturaj BIGINT, results_absentee_blankenshipd BIGINT, results_absentee_pierceb BIGINT, results_absentee_de_la_fuenter BIGINT, last_updated TIMESTAMP, leader_margin_value DOUBLE, leader_margin_display VARCHAR, leader_margin_name_display VARCHAR, leader_party_id VARCHAR, margin2020 DOUBLE, votes2016 BIGINT, margin2016 DOUBLE, state VARCHAR, retrieved_time TIMESTAMP, results_hawkinsh BIGINT, results_write_ins BIGINT, results_absentee_hawkinsh BIGINT, results_absentee_write_ins BIGINT, votes2012 BIGINT, margin2012 DOUBLE, results_westk BIGINT, results_kennedya BIGINT, results_la_rivag BIGINT, results_absentee_westk BIGINT, results_absentee_kennedya BIGINT, results_absentee_la_rivag BIGINT, results_carrollb BIGINT, results_absentee_carrollb BIGINT, results_simmonsj BIGINT, results_boddiep BIGINT, results_hammonsb BIGINT, results_hoeflingt BIGINT, results_absentee_simmonsj BIGINT, results_absentee_boddiep BIGINT, results_absentee_hammonsb BIGINT, results_absentee_hoeflingt BIGINT, results_collinsp BIGINT, results_absentee_collinsp BIGINT, results_kingr BIGINT, results_absentee_kingr BIGINT, results_segalj BIGINT, results_absentee_segalj BIGINT, results_gammonc BIGINT, results_myersj BIGINT, results_absentee_gammonc BIGINT, results_absentee_myersj BIGINT, results_paigeh BIGINT, results_lafontainec BIGINT, results_duncanr BIGINT, results_mccormick BIGINT, results_huberb BIGINT, results_swingg BIGINT, results_kopitkek BIGINT, results_scalfz BIGINT, results_absentee_paigeh BIGINT, results_absentee_lafontainec BIGINT, results_absentee_duncanr BIGINT, results_absentee_mccormick BIGINT, results_absentee_huberb BIGINT, results_absentee_swingg BIGINT, results_absentee_kopitkek BIGINT, results_absentee_scalfz BIGINT, results_hunterd BIGINT, results_absentee_hunterd BIGINT, results_none_of_these_candidates BIGINT, results_absentee_none_of_these_candidates BIGINT, results_tittles BIGINT, results_absentee_tittles BIGINT, results_charlesm BIGINT, results_mchughj BIGINT, results_jacob_fambrop BIGINT, results_scottj BIGINT, results_kishorej BIGINT, results_absentee_charlesm BIGINT, results_absentee_mchughj BIGINT, results_absentee_jacob_fambrop BIGINT, results_absentee_scottj BIGINT, results_absentee_kishorej BIGINT);
CREATE TABLE us_president_favorability("Name" VARCHAR, "Very Favorable %" BIGINT, "Somewhat Favorable %" BIGINT, "Somewhat Unfavorable %" BIGINT, "Very Unfavorable %" BIGINT, "Don’t know %" BIGINT, "Have not heard of them %" BIGINT, "First Inauguration Date" DATE, "Portrait URL" VARCHAR);
CREATE TABLE us_states_grid(x BIGINT, y BIGINT, "key" VARCHAR, "name" VARCHAR);
CREATE TABLE us_state_capitals(state VARCHAR, capital VARCHAR, latitude DOUBLE, longitude DOUBLE);
CREATE TABLE us_state_population_2010_2019(column0 BIGINT, column1 BIGINT, column2 VARCHAR);
CREATE TABLE vacancies("month" DATE, vacancies DOUBLE);
CREATE TABLE vaccines(id VARCHAR, title VARCHAR, note VARCHAR, "data" STRUCT(chart_options STRUCT(vaccine_year DOUBLE, vaccine_x BIGINT), "values" STRUCT("data" DOUBLE[][])));
CREATE TABLE volcano(width BIGINT, height BIGINT, "values" BIGINT[]);
CREATE TABLE wind(longitude DOUBLE, latitude DOUBLE, u DOUBLE, v DOUBLE);




